from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix
from sklearn.linear_model import LogisticRegression

dtrain = xgb.DMatrix(x_train, label=y_train)
dvalid = xgb.DMatrix(x_test, label=y_test)

param = {'objective': 'binary:logistic',
         'booster': 'dart',
          'eval_metric': 'auc',
         #'scale_pos_weight': 0.07,
         'eta': 0.01,
         'max_depth':5,
         'min_child_weight':1,
         'gamma': 0,
         'subsample' :0.95,
         'colsample_bytree' :0.35,
         'reg_alpha': 0.01,
         'reg_lambda':0.08}
evallist = [(dvalid, 'eval'), (dtrain, 'train')]

xgboost = xgb.train(param, dtrain, 70 , evallist)

ypred = xgboost.predict(dvalid)
for i in range(len(ypred)):
  if ypred[i]<0.5:
    ypred[i]=0
  else:
    ypred[i]=1
print(classification_report(y_test, ypred))
print(confusion_matrix(y_test, ypred))
