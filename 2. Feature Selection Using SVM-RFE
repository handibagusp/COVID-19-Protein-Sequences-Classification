estimator = SVC(kernel="linear",random_state=0)
selector = RFECV(estimator, step=1, cv=StratifiedKFold(10), 
                 scoring='accuracy')
selector = selector.fit(x_train, y_train)

ww = selector.ranking_.tolist()
selector.ranking_

print('Optimal number of features: {}'.format(selector.n_features_))

plt.figure(figsize=(16, 9))
plt.title('Recursive Feature Elimination', fontsize=18, fontweight='bold', pad=20)
plt.xlabel('Number of Features', fontsize=14, labelpad=20)
plt.ylabel('Accuracy', fontsize=14, labelpad=20)
plt.plot(range(1, len(selector.grid_scores_) + 1), selector.grid_scores_, 
         color='#303F9F', linewidth=3)

plt.show()

top =18
rank=[]
for i in range(len(selector.ranking_)):
    rank.append(ww.index(min(ww)))
    ww[ww.index(min(ww))]=float(np.Inf) #mengurutkan dan mencari fitur dengan bobot terbesar
    #memperbarui bobot terbesar yang sudah diambil menjadi NINF, negative infinity.


peringkat = rank[:top]
print(peringkat)
print(len(peringkat))

top_vars=[]
for i in rank:
    top_vars.append(list(x_train)[i])
top_vars=top_vars[:top]
#print(top_vars)

X = X[top_vars] 
